-  va_arg nodes
-  BSTART, BEND nodes (to free data allocated by ALLOCA)
-  ENTRY node for multy-entry units
-  guards
-  variable name binding

-  VLOAD, VSTORE -> SSA

?  reassociation folding rules
-  folding engine improvement (one rule for few patterns)

-  irreducable loops detection/support

-  range inference and PI node
-  SCCP edge cases
-  Folding after SCCP (see combo4.ir)

?  instruction selection
	- xor, btsl=INCL, btrl=EXCL, btl=IN, bsr
    - MOVZX to avoid a SHIFT and AND instruction
    - Use CMOVcc to remove branches
    - BURS ???

?  register allocation
	-  hints and low priority registers (prevent allocating registers that are used as hints tests/x86/ra_015.irt)
	-  spill slot coalescing
	-  optimal spill code placement through resolution
	-  splinting (spill only at cold path if possible)
	-  separate INT and FP allocation phases (for performance)

?  code generation
	-  COND
	?  32-bit x86 back-end
		- ABS_INT incorrect register allocation (tests/x86/abs_001.irt)
		- MIN swap operands (tests/x86/min_005.ir, tests/x86/min_006.irt)
	-  32-bit x86 back-end 64-bit integers support
		(add_009.irt, conv_001.irt, conv_002.irt, conv_004.irt, conv_007.irt, conv_010.irt, sub_009.irt)
	-  binary code emission without DynAsm ???

-  modules (functions, data objecs, import, export, prototypes, forward declarations, memory segments, ref data, expr data) 
-  C front-end
-  interpreter
-  alias analyzes

-  PHP support
