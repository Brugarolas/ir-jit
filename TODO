-  type casting nodes
-  overflow detection nodes 
-  va_arg nodes
-  BSTART, BEND nodes (to free data allocated by ALLOCA)
-  ENTRY node for multy-entry units
-  IJMP
-  guards
-  variable name binding

-  VLOAD, VSTORE -> SSA

?  reassociation folding rules
-  folding engine improvement (one rule for few patterns)

-  irreducable loops detection
-  irreducable loops support

-  range inference and PI node
-  SCCP edge cases
-  Folding after SCCP (see combo4.ir)

-  local scheduling according to data dependencies, register presure and pipeline stalls
-  basic block trace scheduling

?  instruction selection
	- xor, btsl=INCL, btrl=EXCL, btl=IN, bsr, maxss, maxsd, minss, minsd
    - MOVZX to avoid a SHIFT and AND instruction
    - Use CMOVcc to remove branches
    - BURS ???

?  register allocation
	+  linear scan
		-  separate INT and FP allocation phases
	?  spills
	    +  spill everywhere code placement
		+  packed/aligned spill slot allocation
		-  spill slot coalescing
	    -  optimal spill code placement through resolution
	-  splinting
		-  spill only at cold path if possible	
	?  hints
		-  hints and low priority

?  code generation
	-  OVERFLOW
	-  MIN, MAX, COND
	-  CAST
	-  update memory (binop_int, mul_div_mod_pwr2, shift, shift_const, op_int, copy_int/fp?)
	?  operands swap (binop_int, binop_sse, binop_avx, cmp_int, cmp_fp, cmp_br_int)
	-  stack arguments and parameters
	-  return merge/split
	?  binary code emission without DynAsm
	- 32-bit x86 code

?  disassembler
    -  .rodata section and relative data labels

-  modules (functions, data objecs, import, export, prototypes, forward declarations, memory segments, ref data, expr data) 
-  C compiler
-  interpreter
-  alias analyzes

-  PHP support
