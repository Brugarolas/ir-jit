--TEST--
CALL with parallel argument passing
--TARGET--
aarch64
--ARGS--
-S
--CODE--
{
	uintptr_t c_6 = "hello %d!\n";
	l_1 = START(l_4);
	int32_t p_1 = PARAM(l_1, "p1", 1);
	int32_t p_2 = PARAM(l_1, "p2", 2);
	int32_t p_3 = PARAM(l_1, "p3", 3);
	int32_t p_4 = PARAM(l_1, "p4", 4);
	uintptr_t fp = PARAM(l_1, "fp", 5);
	uintptr_t f, l_11 = LOAD(l_1, fp);	
	int32_t d_2, l_2 = CALL/4(l_11, f, c_6, p_3, p_4, p_2);
	int32_t d_3 = ADD(d_2, p_1);
	l_4 = RETURN(l_2, d_3);
}
--EXPECT--
test:
	stp x29, x30, [sp, #-0x20]!
	mov x29, sp
	str x19, [x29, #0x18]
	mov w19, w0
	ldr x4, [x4]
	mov w16, w1
	mov w1, w2
	mov w2, w3
	mov w3, w16
	adr x0, .L1
	blr x4
	add w0, w0, w19
	ldr x19, [x29, #0x18]
	ldp x29, x30, [sp], #0x20
	ret
.rodata
	.db 0x1f, 0x20, 0x03, 0xd5
.L1:
	.db 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x25, 0x64, 0x21, 0x0a, 0x00, 0x00
